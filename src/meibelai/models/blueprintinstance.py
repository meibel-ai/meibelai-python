"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .activity import Activity, ActivityTypedDict
from .blueprintinstancestatus import BlueprintInstanceStatus
from .event import Event, EventTypedDict
from datetime import datetime
from meibelai.types import BaseModel, Nullable, OptionalNullable, UNSET, UNSET_SENTINEL
from pydantic import model_serializer
from typing import Any, Dict, List
from typing_extensions import NotRequired, TypedDict


class BlueprintInstanceTypedDict(TypedDict):
    r"""BlueprintInstance"""

    id: NotRequired[Nullable[str]]
    blueprint_id: NotRequired[Nullable[str]]
    workflow_type: NotRequired[Nullable[str]]
    task_queue: NotRequired[Nullable[str]]
    workflow_run_id: NotRequired[Nullable[str]]
    status: NotRequired[Nullable[BlueprintInstanceStatus]]
    start_time: NotRequired[Nullable[datetime]]
    end_time: NotRequired[Nullable[datetime]]
    instance_metadata: NotRequired[Nullable[Dict[str, Any]]]
    parent_id: NotRequired[Nullable[str]]
    children: NotRequired[Nullable[List[BlueprintInstanceTypedDict]]]
    activities: NotRequired[Nullable[List[ActivityTypedDict]]]
    events: NotRequired[Nullable[List[EventTypedDict]]]


class BlueprintInstance(BaseModel):
    r"""BlueprintInstance"""

    id: OptionalNullable[str] = UNSET

    blueprint_id: OptionalNullable[str] = UNSET

    workflow_type: OptionalNullable[str] = UNSET

    task_queue: OptionalNullable[str] = UNSET

    workflow_run_id: OptionalNullable[str] = UNSET

    status: OptionalNullable[BlueprintInstanceStatus] = UNSET

    start_time: OptionalNullable[datetime] = UNSET

    end_time: OptionalNullable[datetime] = UNSET

    instance_metadata: OptionalNullable[Dict[str, Any]] = UNSET

    parent_id: OptionalNullable[str] = UNSET

    children: OptionalNullable[List[BlueprintInstance]] = UNSET

    activities: OptionalNullable[List[Activity]] = UNSET

    events: OptionalNullable[List[Event]] = UNSET

    @model_serializer(mode="wrap")
    def serialize_model(self, handler):
        optional_fields = [
            "id",
            "blueprint_id",
            "workflow_type",
            "task_queue",
            "workflow_run_id",
            "status",
            "start_time",
            "end_time",
            "instance_metadata",
            "parent_id",
            "children",
            "activities",
            "events",
        ]
        nullable_fields = [
            "id",
            "blueprint_id",
            "workflow_type",
            "task_queue",
            "workflow_run_id",
            "status",
            "start_time",
            "end_time",
            "instance_metadata",
            "parent_id",
            "children",
            "activities",
            "events",
        ]
        null_default_fields = []

        serialized = handler(self)

        m = {}

        for n, f in type(self).model_fields.items():
            k = f.alias or n
            val = serialized.get(k)
            serialized.pop(k, None)

            optional_nullable = k in optional_fields and k in nullable_fields
            is_set = (
                self.__pydantic_fields_set__.intersection({n})
                or k in null_default_fields
            )  # pylint: disable=no-member

            if val is not None and val != UNSET_SENTINEL:
                m[k] = val
            elif val != UNSET_SENTINEL and (
                not k in optional_fields or (optional_nullable and is_set)
            ):
                m[k] = val

        return m
