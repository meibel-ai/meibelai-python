"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from meibelai.types import BaseModel
from typing_extensions import TypedDict


class SSECompleteEventEvent(str, Enum):
    r"""Event type"""

    STREAM_COMPLETE = "stream_complete"


class SSECompleteEventDataTypedDict(TypedDict):
    upload_id: str
    r"""Upload ID"""


class SSECompleteEventData(BaseModel):
    upload_id: str
    r"""Upload ID"""


class SSECompleteEventTypedDict(TypedDict):
    r"""SSE stream completion event"""

    event: SSECompleteEventEvent
    r"""Event type"""
    data: SSECompleteEventDataTypedDict


class SSECompleteEvent(BaseModel):
    r"""SSE stream completion event"""

    event: SSECompleteEventEvent
    r"""Event type"""

    data: SSECompleteEventData
