"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from meibelai.types import BaseModel
from typing_extensions import TypedDict


class SSEConnectionEventEvent(str, Enum):
    r"""Event type"""

    CONNECTED = "connected"


class CurrentStatusTypedDict(TypedDict):
    r"""Current upload status"""


class CurrentStatus(BaseModel):
    r"""Current upload status"""


class DataTypedDict(TypedDict):
    upload_id: str
    r"""Upload ID"""
    current_status: CurrentStatusTypedDict
    r"""Current upload status"""


class Data(BaseModel):
    upload_id: str
    r"""Upload ID"""

    current_status: CurrentStatus
    r"""Current upload status"""


class SSEConnectionEventTypedDict(TypedDict):
    r"""Initial SSE connection event"""

    event: SSEConnectionEventEvent
    r"""Event type"""
    data: DataTypedDict


class SSEConnectionEvent(BaseModel):
    r"""Initial SSE connection event"""

    event: SSEConnectionEventEvent
    r"""Event type"""

    data: Data
