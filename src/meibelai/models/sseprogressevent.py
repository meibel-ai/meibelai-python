"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from meibelai.types import BaseModel
from typing_extensions import TypedDict


class SSEProgressEventEvent(str, Enum):
    r"""Event type"""

    PROGRESS = "progress"


class SSEProgressEventDataDataTypedDict(TypedDict):
    r"""Progress data"""


class SSEProgressEventDataData(BaseModel):
    r"""Progress data"""


class SSEProgressEventDataTypedDict(TypedDict):
    type: str
    r"""Progress event subtype"""
    upload_id: str
    r"""Upload ID"""
    timestamp: float
    r"""Event timestamp"""
    data: SSEProgressEventDataDataTypedDict
    r"""Progress data"""


class SSEProgressEventData(BaseModel):
    type: str
    r"""Progress event subtype"""

    upload_id: str
    r"""Upload ID"""

    timestamp: float
    r"""Event timestamp"""

    data: SSEProgressEventDataData
    r"""Progress data"""


class SSEProgressEventTypedDict(TypedDict):
    r"""Server-Sent Event for upload progress"""

    event: SSEProgressEventEvent
    r"""Event type"""
    data: SSEProgressEventDataTypedDict


class SSEProgressEvent(BaseModel):
    r"""Server-Sent Event for upload progress"""

    event: SSEProgressEventEvent
    r"""Event type"""

    data: SSEProgressEventData
