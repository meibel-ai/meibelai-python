lockVersion: 2.0.0
id: c1c6891a-974d-4485-9f9e-e0f3320259c6
management:
  docChecksum: ea23824571c70d334116c422e8cc5668
  docVersion: 0.2.0
  speakeasyVersion: 1.606.5
  generationVersion: 2.687.1
  releaseVersion: 0.14.1
  configChecksum: ec2f8e18dec6fb711e0d5f7eda752f60
  repoURL: https://github.com/meibel-ai/meibelai-python.git
  installationURL: https://github.com/meibel-ai/meibelai-python.git
features:
  python:
    additionalDependencies: 1.0.0
    constsAndDefaults: 1.0.5
    core: 5.19.9
    defaultEnabledRetries: 0.2.0
    devContainers: 3.0.0
    enumUnions: 0.1.0
    envVarSecurityUsage: 0.3.2
    flatRequests: 1.0.1
    flattening: 3.1.1
    globalSecurity: 3.0.3
    globalSecurityCallbacks: 1.0.0
    globalSecurityFlattening: 1.0.0
    globalServerURLs: 3.1.1
    methodArguments: 1.0.2
    nullables: 1.0.1
    responseFormat: 1.0.1
    retries: 3.0.2
    sdkHooks: 1.1.0
    unions: 3.0.4
generatedFiles:
  - .devcontainer/README.md
  - .devcontainer/devcontainer.json
  - .devcontainer/setup.sh
  - .gitattributes
  - .vscode/settings.json
  - USAGE.md
  - docs/models/activity.md
  - docs/models/activitystatus.md
  - docs/models/addactivitybyblueprintinstancerequest.md
  - docs/models/addactivityrequest.md
  - docs/models/addactivityresponse.md
  - docs/models/addblueprintinstancerequest.md
  - docs/models/addblueprintinstanceresponse.md
  - docs/models/addchunkingstrategyrequest.md
  - docs/models/addchunkingstrategyrequest1.md
  - docs/models/addchunkingstrategyresponse.md
  - docs/models/adddataelementrequest.md
  - docs/models/adddataelementrequest1.md
  - docs/models/adddataelementresponse.md
  - docs/models/adddatasourcerequest.md
  - docs/models/adddatasourceresponse.md
  - docs/models/addeventresponse.md
  - docs/models/addragconfigrequest.md
  - docs/models/addragconfigrequest1.md
  - docs/models/addragconfigresponse.md
  - docs/models/addtagcolumninforequest.md
  - docs/models/addtagcolumnrequest.md
  - docs/models/addtagcolumnresponse.md
  - docs/models/addtagconfigrequest.md
  - docs/models/addtagconfigrequest1.md
  - docs/models/addtagconfigresponse.md
  - docs/models/addtagtableinforequest.md
  - docs/models/addtagtablerequest.md
  - docs/models/addtagtableresponse.md
  - docs/models/alloweddataelementfilterkeys.md
  - docs/models/basicwebauth.md
  - docs/models/blueprintinstance.md
  - docs/models/blueprintinstancestatus.md
  - docs/models/cancelblueprintinstancerequest.md
  - docs/models/codechunking.md
  - docs/models/completeblueprintinstancerequest.md
  - docs/models/completeblueprintinstancerequest1.md
  - docs/models/createeventbyblueprintinstanceidrequest.md
  - docs/models/customeventrequest.md
  - docs/models/dataelement.md
  - docs/models/dataelementcondition.md
  - docs/models/dataelementdiscoveryrecord.md
  - docs/models/dataelementfilter.md
  - docs/models/dataelementfilterrequest.md
  - docs/models/datasource.md
  - docs/models/datasourcewebconfig.md
  - docs/models/deleteblueprintinstancerequest.md
  - docs/models/deletechunkingstrategyrequest.md
  - docs/models/deletechunkingstrategyresponse.md
  - docs/models/deletedataelementrequest.md
  - docs/models/deletedataelementresponse.md
  - docs/models/deletedatasourcerequest.md
  - docs/models/deletedatasourceresponse.md
  - docs/models/deleteragconfigrequest.md
  - docs/models/deletetagcolumninforequest.md
  - docs/models/deletetagconfigrequest.md
  - docs/models/deletetagtableinforequest.md
  - docs/models/deletetagtableresponse.md
  - docs/models/embeddingmodel.md
  - docs/models/event.md
  - docs/models/eventtype.md
  - docs/models/extractormodel.md
  - docs/models/failblueprintinstancerequest.md
  - docs/models/failblueprintinstancerequest1.md
  - docs/models/getactivitiesbyblueprintinstancerequest.md
  - docs/models/getactivitiesresponse.md
  - docs/models/getactivitybyblueprintinstancerequest.md
  - docs/models/getallblueprintinstancesrequest.md
  - docs/models/getalldatasourceidsrequest.md
  - docs/models/getalltagcolumninforequest.md
  - docs/models/getalltagtableinforequest.md
  - docs/models/getblueprintinstancerequest.md
  - docs/models/getblueprintinstancesresponse.md
  - docs/models/getchunkingstrategyrequest.md
  - docs/models/getdataelementrequest.md
  - docs/models/getdataelementsbyfiltersrequest.md
  - docs/models/getdataelementsrequest.md
  - docs/models/getdatasourcerequest.md
  - docs/models/geteventbyblueprintinstancerequest.md
  - docs/models/geteventsbyblueprintinstancerequest.md
  - docs/models/geteventsresponse.md
  - docs/models/getragconfigrequest.md
  - docs/models/gettagcolumninforequest.md
  - docs/models/gettagconfigrequest.md
  - docs/models/gettagtableinforequest.md
  - docs/models/htmlchunking.md
  - docs/models/httpvalidationerror.md
  - docs/models/jsonnodechunking.md
  - docs/models/loc.md
  - docs/models/markdownnodechunking.md
  - docs/models/metadataoptions.md
  - docs/models/objectstorageconfig.md
  - docs/models/objectstoragefilters.md
  - docs/models/queryworkflowrequest.md
  - docs/models/ragchunkingstrategy.md
  - docs/models/ragconfig.md
  - docs/models/s3config.md
  - docs/models/security.md
  - docs/models/semanticchunking.md
  - docs/models/sendsignalrequest.md
  - docs/models/sentencechunking.md
  - docs/models/size.md
  - docs/models/sparseembeddingmodel.md
  - docs/models/startblueprintinstancerequest.md
  - docs/models/startblueprintinstancerequest1.md
  - docs/models/tagcolumninfo.md
  - docs/models/tagconfig.md
  - docs/models/tagtableinfo.md
  - docs/models/tokentextchunking.md
  - docs/models/updateactivitystatusrequest.md
  - docs/models/updateblueprintinstancestatusrequest.md
  - docs/models/updatechunkingstrategyrequest.md
  - docs/models/updatechunkingstrategyrequest1.md
  - docs/models/updatechunkingstrategyresponse.md
  - docs/models/updatedataelementrequest.md
  - docs/models/updatedataelementrequest1.md
  - docs/models/updatedataelementresponse.md
  - docs/models/updatedatasourcerequest.md
  - docs/models/updatedatasourcerequest1.md
  - docs/models/updatedatasourceresponse.md
  - docs/models/updateragconfigrequest.md
  - docs/models/updateragconfigrequest1.md
  - docs/models/updateragconfigresponse.md
  - docs/models/updatetagcolumninforequest.md
  - docs/models/updatetagcolumnrequest.md
  - docs/models/updatetagcolumnresponse.md
  - docs/models/updatetagconfigrequest.md
  - docs/models/updatetagconfigrequest1.md
  - docs/models/updatetagconfigresponse.md
  - docs/models/updatetagtableinforequest.md
  - docs/models/updatetagtablerequest.md
  - docs/models/updatetagtableresponse.md
  - docs/models/utils/retryconfig.md
  - docs/models/validationerror.md
  - docs/models/webdomain.md
  - docs/sdks/blueprintinstances/README.md
  - docs/sdks/dataelements/README.md
  - docs/sdks/datasources/README.md
  - docs/sdks/meibelai/README.md
  - docs/sdks/rag/README.md
  - docs/sdks/tag/README.md
  - poetry.toml
  - py.typed
  - pylintrc
  - pyproject.toml
  - scripts/prepare_readme.py
  - scripts/publish.sh
  - src/meibelai/__init__.py
  - src/meibelai/_hooks/__init__.py
  - src/meibelai/_hooks/sdkhooks.py
  - src/meibelai/_hooks/types.py
  - src/meibelai/_version.py
  - src/meibelai/basesdk.py
  - src/meibelai/blueprint_instances.py
  - src/meibelai/data_elements.py
  - src/meibelai/datasources.py
  - src/meibelai/httpclient.py
  - src/meibelai/models/__init__.py
  - src/meibelai/models/activity.py
  - src/meibelai/models/activitystatus.py
  - src/meibelai/models/add_activity_by_blueprint_instanceop.py
  - src/meibelai/models/add_chunking_strategyop.py
  - src/meibelai/models/add_data_elementop.py
  - src/meibelai/models/add_rag_configop.py
  - src/meibelai/models/add_tag_column_infoop.py
  - src/meibelai/models/add_tag_configop.py
  - src/meibelai/models/add_tag_table_infoop.py
  - src/meibelai/models/addactivityrequest.py
  - src/meibelai/models/addactivityresponse.py
  - src/meibelai/models/addblueprintinstancerequest.py
  - src/meibelai/models/addblueprintinstanceresponse.py
  - src/meibelai/models/addchunkingstrategyrequest.py
  - src/meibelai/models/addchunkingstrategyresponse.py
  - src/meibelai/models/adddataelementrequest.py
  - src/meibelai/models/adddataelementresponse.py
  - src/meibelai/models/adddatasourcerequest.py
  - src/meibelai/models/adddatasourceresponse.py
  - src/meibelai/models/addeventresponse.py
  - src/meibelai/models/addragconfigrequest.py
  - src/meibelai/models/addragconfigresponse.py
  - src/meibelai/models/addtagcolumnrequest.py
  - src/meibelai/models/addtagcolumnresponse.py
  - src/meibelai/models/addtagconfigrequest.py
  - src/meibelai/models/addtagconfigresponse.py
  - src/meibelai/models/addtagtablerequest.py
  - src/meibelai/models/addtagtableresponse.py
  - src/meibelai/models/alloweddataelementfilterkeys.py
  - src/meibelai/models/apierror.py
  - src/meibelai/models/basicwebauth.py
  - src/meibelai/models/blueprintinstance.py
  - src/meibelai/models/blueprintinstancestatus.py
  - src/meibelai/models/cancel_blueprint_instanceop.py
  - src/meibelai/models/codechunking.py
  - src/meibelai/models/complete_blueprint_instanceop.py
  - src/meibelai/models/completeblueprintinstancerequest.py
  - src/meibelai/models/create_event_by_blueprint_instance_idop.py
  - src/meibelai/models/customeventrequest.py
  - src/meibelai/models/dataelement.py
  - src/meibelai/models/dataelementcondition.py
  - src/meibelai/models/dataelementdiscoveryrecord.py
  - src/meibelai/models/dataelementfilter.py
  - src/meibelai/models/dataelementfilterrequest.py
  - src/meibelai/models/datasource.py
  - src/meibelai/models/datasourcewebconfig.py
  - src/meibelai/models/delete_blueprint_instanceop.py
  - src/meibelai/models/delete_chunking_strategyop.py
  - src/meibelai/models/delete_data_elementop.py
  - src/meibelai/models/delete_datasourceop.py
  - src/meibelai/models/delete_rag_configop.py
  - src/meibelai/models/delete_tag_column_infoop.py
  - src/meibelai/models/delete_tag_configop.py
  - src/meibelai/models/delete_tag_table_infoop.py
  - src/meibelai/models/deletechunkingstrategyresponse.py
  - src/meibelai/models/deletedataelementresponse.py
  - src/meibelai/models/deletedatasourceresponse.py
  - src/meibelai/models/deletetagtableresponse.py
  - src/meibelai/models/embeddingmodel.py
  - src/meibelai/models/event.py
  - src/meibelai/models/eventtype.py
  - src/meibelai/models/extractormodel.py
  - src/meibelai/models/fail_blueprint_instanceop.py
  - src/meibelai/models/failblueprintinstancerequest.py
  - src/meibelai/models/get_activities_by_blueprint_instanceop.py
  - src/meibelai/models/get_activity_by_blueprint_instanceop.py
  - src/meibelai/models/get_all_blueprint_instancesop.py
  - src/meibelai/models/get_all_tag_column_infoop.py
  - src/meibelai/models/get_all_tag_table_infoop.py
  - src/meibelai/models/get_blueprint_instanceop.py
  - src/meibelai/models/get_chunking_strategyop.py
  - src/meibelai/models/get_data_elementop.py
  - src/meibelai/models/get_data_elements_by_filtersop.py
  - src/meibelai/models/get_data_elementsop.py
  - src/meibelai/models/get_datasourceop.py
  - src/meibelai/models/get_event_by_blueprint_instanceop.py
  - src/meibelai/models/get_events_by_blueprint_instanceop.py
  - src/meibelai/models/get_rag_configop.py
  - src/meibelai/models/get_tag_column_infoop.py
  - src/meibelai/models/get_tag_configop.py
  - src/meibelai/models/get_tag_table_infoop.py
  - src/meibelai/models/getactivitiesresponse.py
  - src/meibelai/models/getalldatasourceidsrequest.py
  - src/meibelai/models/getblueprintinstancesresponse.py
  - src/meibelai/models/geteventsresponse.py
  - src/meibelai/models/htmlchunking.py
  - src/meibelai/models/httpvalidationerror.py
  - src/meibelai/models/jsonnodechunking.py
  - src/meibelai/models/markdownnodechunking.py
  - src/meibelai/models/meibelaierror.py
  - src/meibelai/models/metadataoptions.py
  - src/meibelai/models/no_response_error.py
  - src/meibelai/models/objectstorageconfig.py
  - src/meibelai/models/objectstoragefilters.py
  - src/meibelai/models/query_workflowop.py
  - src/meibelai/models/ragchunkingstrategy.py
  - src/meibelai/models/ragconfig.py
  - src/meibelai/models/responsevalidationerror.py
  - src/meibelai/models/s3config.py
  - src/meibelai/models/security.py
  - src/meibelai/models/semanticchunking.py
  - src/meibelai/models/send_signalop.py
  - src/meibelai/models/sentencechunking.py
  - src/meibelai/models/sparseembeddingmodel.py
  - src/meibelai/models/start_blueprint_instanceop.py
  - src/meibelai/models/startblueprintinstancerequest.py
  - src/meibelai/models/tagcolumninfo.py
  - src/meibelai/models/tagconfig.py
  - src/meibelai/models/tagtableinfo.py
  - src/meibelai/models/tokentextchunking.py
  - src/meibelai/models/update_activity_statusop.py
  - src/meibelai/models/update_blueprint_instance_statusop.py
  - src/meibelai/models/update_chunking_strategyop.py
  - src/meibelai/models/update_data_elementop.py
  - src/meibelai/models/update_datasourceop.py
  - src/meibelai/models/update_rag_configop.py
  - src/meibelai/models/update_tag_column_infoop.py
  - src/meibelai/models/update_tag_configop.py
  - src/meibelai/models/update_tag_table_infoop.py
  - src/meibelai/models/updatechunkingstrategyrequest.py
  - src/meibelai/models/updatechunkingstrategyresponse.py
  - src/meibelai/models/updatedataelementrequest.py
  - src/meibelai/models/updatedataelementresponse.py
  - src/meibelai/models/updatedatasourcerequest.py
  - src/meibelai/models/updatedatasourceresponse.py
  - src/meibelai/models/updateragconfigrequest.py
  - src/meibelai/models/updateragconfigresponse.py
  - src/meibelai/models/updatetagcolumnrequest.py
  - src/meibelai/models/updatetagcolumnresponse.py
  - src/meibelai/models/updatetagconfigrequest.py
  - src/meibelai/models/updatetagconfigresponse.py
  - src/meibelai/models/updatetagtablerequest.py
  - src/meibelai/models/updatetagtableresponse.py
  - src/meibelai/models/validationerror.py
  - src/meibelai/models/webdomain.py
  - src/meibelai/py.typed
  - src/meibelai/rag.py
  - src/meibelai/sdk.py
  - src/meibelai/sdkconfiguration.py
  - src/meibelai/tag.py
  - src/meibelai/types/__init__.py
  - src/meibelai/types/basemodel.py
  - src/meibelai/utils/__init__.py
  - src/meibelai/utils/annotations.py
  - src/meibelai/utils/datetimes.py
  - src/meibelai/utils/enums.py
  - src/meibelai/utils/eventstreaming.py
  - src/meibelai/utils/forms.py
  - src/meibelai/utils/headers.py
  - src/meibelai/utils/logger.py
  - src/meibelai/utils/metadata.py
  - src/meibelai/utils/queryparams.py
  - src/meibelai/utils/requestbodies.py
  - src/meibelai/utils/retries.py
  - src/meibelai/utils/security.py
  - src/meibelai/utils/serializers.py
  - src/meibelai/utils/unmarshal_json_response.py
  - src/meibelai/utils/url.py
  - src/meibelai/utils/values.py
examples:
  list:
    speakeasy-default-list:
      parameters:
        query:
          offset: 0
          limit: 10
      responses:
        "200":
          application/json: [{"created_at": "2021-08-01T12:00:00Z", "data_elements": [{"id": "de_xiTz3", "parent_id": "de_xiTz3", "is_container_element": "True", "datasource_id": "ds_xiTz3", "name": "My Data Element", "value": "Value", "type": "eml", "description": "A data element", "processed": "True", "created_at": "2021-08-01T12:00:00Z", "updated_at": "2021-08-01T12:00:00Z"}, {"id": "de_xiTz3", "parent_id": "de_xiTz3", "is_container_element": "True", "datasource_id": "ds_xiTz3", "name": "My Data Element", "value": "Value", "type": "eml", "description": "A data element", "processed": "True", "created_at": "2021-08-01T12:00:00Z", "updated_at": "2021-08-01T12:00:00Z"}], "description": "A datasource", "id": "ds_xiTz3", "name": "My Datasource", "type": "<value>", "updated_at": "1735666686893"}, {"created_at": "2021-08-01T12:00:00Z", "data_elements": [{"id": "de_xiTz3", "parent_id": "de_xiTz3", "is_container_element": "True", "datasource_id": "ds_xiTz3", "name": "My Data Element", "value": "Value", "type": "eml", "description": "A data element", "processed": "True", "created_at": "2021-08-01T12:00:00Z", "updated_at": "2021-08-01T12:00:00Z"}, {"id": "de_xiTz3", "parent_id": "de_xiTz3", "is_container_element": "True", "datasource_id": "ds_xiTz3", "name": "My Data Element", "value": "Value", "type": "eml", "description": "A data element", "processed": "True", "created_at": "2021-08-01T12:00:00Z", "updated_at": "2021-08-01T12:00:00Z"}], "description": "A datasource", "id": "ds_xiTz3", "name": "My Datasource", "type": "<value>", "updated_at": "1735666686893"}, {"created_at": "2021-08-01T12:00:00Z", "data_elements": [{"id": "de_xiTz3", "parent_id": "de_xiTz3", "is_container_element": "True", "datasource_id": "ds_xiTz3", "name": "My Data Element", "value": "Value", "type": "eml", "description": "A data element", "processed": "True", "created_at": "2021-08-01T12:00:00Z", "updated_at": "2021-08-01T12:00:00Z"}, {"id": "de_xiTz3", "parent_id": "de_xiTz3", "is_container_element": "True", "datasource_id": "ds_xiTz3", "name": "My Data Element", "value": "Value", "type": "eml", "description": "A data element", "processed": "True", "created_at": "2021-08-01T12:00:00Z", "updated_at": "2021-08-01T12:00:00Z"}], "description": "A datasource", "id": "ds_xiTz3", "name": "My Datasource", "type": "<value>", "updated_at": "1735666686893"}]
        "422":
          application/json: {}
  create:
    speakeasy-default-create:
      requestBody:
        application/json: {"description": "A datasource", "name": "My Datasource", "type": "default"}
      responses:
        "200":
          application/json: {"id": "<id>"}
        "422":
          application/json: {}
  get:
    speakeasy-default-get:
      parameters:
        path:
          datasource_id: "<id>"
      responses:
        "200":
          application/json: {"created_at": "2021-08-01T12:00:00Z", "data_elements": [{"id": "de_xiTz3", "parent_id": "de_xiTz3", "is_container_element": "True", "datasource_id": "ds_xiTz3", "name": "My Data Element", "value": "Value", "type": "tar", "description": "A data element", "processed": "True", "created_at": "2021-08-01T12:00:00Z", "updated_at": "2021-08-01T12:00:00Z"}, {"id": "de_xiTz3", "parent_id": "de_xiTz3", "is_container_element": "True", "datasource_id": "ds_xiTz3", "name": "My Data Element", "value": "Value", "type": "tar", "description": "A data element", "processed": "True", "created_at": "2021-08-01T12:00:00Z", "updated_at": "2021-08-01T12:00:00Z"}], "description": "A datasource", "id": "ds_xiTz3", "name": "My Datasource", "type": "<value>", "updated_at": "1735613684571"}
        "422":
          application/json: {}
  update:
    speakeasy-default-update:
      parameters:
        path:
          datasource_id: "<id>"
      requestBody:
        application/json: {"description": "blaring flame considering openly precedent voluntarily beneath", "name": "<value>", "type": "<value>", "metadata": {}}
      responses:
        "200":
          application/json: "<value>"
        "422":
          application/json: {}
  listDataelements:
    speakeasy-default-list-dataelements:
      parameters:
        path:
          datasource_id: 790947
        query:
          offset: 0
          limit: 10
      responses:
        "200":
          application/json: "<value>"
        "422":
          application/json: {}
  createDataelement:
    speakeasy-default-create-dataelement:
      parameters:
        path:
          datasource_id: 934782
      responses:
        "200":
          application/json: "<value>"
        "422":
          application/json: {}
  getDataelement:
    speakeasy-default-get-dataelement:
      parameters:
        path:
          datasource_id: 870573
          dataelement_id: 302275
      responses:
        "200":
          application/json: "<value>"
        "422":
          application/json: {}
  updateDataelement:
    speakeasy-default-update-dataelement:
      parameters:
        path:
          datasource_id: 10702
          dataelement_id: 126234
      responses:
        "200":
          application/json: "<value>"
        "422":
          application/json: {}
  deleteDataelement:
    speakeasy-default-delete-dataelement:
      parameters:
        path:
          datasource_id: 40542
          dataelement_id: 655223
      responses:
        "200":
          application/json: "<value>"
        "422":
          application/json: {}
  uploadDataelement:
    speakeasy-default-upload-dataelement:
      parameters:
        path:
          datasource_id: 691705
      responses:
        "200":
          application/json: "<value>"
        "422":
          application/json: {}
  createCompletion:
    speakeasy-default-create-completion:
      responses:
        "200":
          application/json: "<value>"
        "422":
          application/json: {}
  createStreamCompletion:
    speakeasy-default-create-stream-completion:
      responses:
        "422":
          application/json: {}
  get_experiences_experiences__get:
    speakeasy-default-get-experiences-experiences-get:
      responses:
        "200":
          application/json: "<value>"
        "422":
          application/json: {}
  run_chat:
    speakeasy-default-run-chat:
      parameters:
        path:
          experience_id: 222689
      responses:
        "200":
          application/json: "<value>"
        "422":
          application/json: {}
  run_chat_stream:
    speakeasy-default-run-chat-stream:
      parameters:
        path:
          experience_id: 674532
      responses:
        "422":
          application/json: {}
  root__get:
    speakeasy-default-root-get:
      responses:
        "200":
          application/json: "<value>"
  add_datasource:
    speakeasy-default-add-datasource:
      parameters:
        header:
          customer-id: "<value>"
      requestBody:
        application/json: {"customer_id": "<id>", "project_id": "<id>", "name": "<value>", "description": "smooth hmph geez key", "recurrence": "<value>", "object_storage_config": {"bucket": "<value>", "prefix": "<value>", "filters": {"included_prefixes": ["<value 1>", "<value 2>"], "included_file_types": ["<value 1>", "<value 2>", "<value 3>"], "recursive_prefixes": true, "modified_date_start": "<value>", "modified_date_end": "<value>", "min_file_size": 110821, "max_file_size": 861343}, "gcs_config": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "s3_config": null}, "web_config": {"baseURL": "https://soupy-department.biz", "javascriptRender": false, "waitForSelector": "<value>", "domains": [{"domain": "well-made-hygienic.com", "limitPattern": "<value>", "excludePattern": "<value>", "ingestible": true, "expandable": true}], "authentication": {"username": "Amir_Schaden", "password": "Qgqx_NgZXn9ZOj5"}}}
      responses:
        "200":
          application/json: {"id": "<id>"}
        "422":
          application/json: {"detail": [{"loc": [], "msg": "<value>", "type": "<value>"}]}
  get_datasource:
    speakeasy-default-get-datasource:
      parameters:
        path:
          datasource_id: "<id>"
        header:
          customer-id: "<id>"
      responses:
        "200":
          application/json: {"id": "<id>", "customer_id": "<id>", "project_id": "<id>", "name": "<value>", "description": "what minor wrongly wrong redress annual selfishly bleakly provided apud", "recurrence": "<value>", "created_by": "<value>", "created_at": "1704480796900", "updated_by": "<value>", "updated_at": "1735638000776", "object_storage_config": {"bucket": "<value>", "prefix": "<value>", "filters": {"included_prefixes": ["<value 1>", "<value 2>", "<value 3>"], "included_file_types": ["<value 1>", "<value 2>", "<value 3>"], "recursive_prefixes": false, "modified_date_start": "<value>", "modified_date_end": "<value>", "min_file_size": null, "max_file_size": 25430}, "gcs_config": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "s3_config": {"role_arn": "<value>", "region": "<value>"}}, "web_config": {"baseURL": "https://distant-acquaintance.name/", "javascriptRender": true, "waitForSelector": "<value>", "domains": [], "authentication": {"username": "Kariane.Blanda8", "password": "EiDnr6JVKVp64wp"}}}
        "422":
          application/json: {"detail": [{"loc": [586546], "msg": "<value>", "type": "<value>"}]}
  update_datasource:
    speakeasy-default-update-datasource:
      parameters:
        path:
          datasource_id: "<id>"
        header:
          customer-id: "<id>"
      requestBody:
        application/json: {"name": "<value>", "description": "amongst coordinated all", "recurrence": "<value>", "object_storage_config": {"bucket": "<value>", "prefix": null, "filters": {"included_prefixes": ["<value 1>", "<value 2>", "<value 3>"], "included_file_types": ["<value 1>"], "recursive_prefixes": true, "modified_date_start": "<value>", "modified_date_end": "<value>", "min_file_size": 289575, "max_file_size": 208282}, "gcs_config": {"key": "<value>", "key1": "<value>"}, "s3_config": {"role_arn": "<value>", "region": "<value>"}}, "web_config": {"baseURL": "https://giving-pendant.net", "javascriptRender": true, "waitForSelector": "<value>", "domains": [], "authentication": {"username": "Audie94", "password": "lD3r6ZuNUApWlV4"}}}
      responses:
        "200":
          application/json: {"id": "<id>"}
        "422":
          application/json: {"detail": [{"loc": [], "msg": "<value>", "type": "<value>"}]}
  delete_datasource_datasource__datasource_id__delete:
    speakeasy-default-delete-datasource-datasource-datasource-id-delete:
      parameters:
        path:
          datasource_id: "<id>"
        header:
          customer-id: "<id>"
      responses:
        "200":
          application/json: {"id": "<id>"}
        "422":
          application/json: {"detail": [{"loc": [], "msg": "<value>", "type": "<value>"}]}
  get_all_datasource_ids:
    speakeasy-default-get-all-datasource-ids:
      parameters:
        query:
          offset: 0
          limit: 10
        header:
          customer-id: "<value>"
      requestBody:
        application/json: {"customer_id": "<id>", "project_id": "<id>"}
      responses:
        "200":
          application/json: ["<value 1>", "<value 2>", "<value 3>"]
        "422":
          application/json: {"detail": [{"loc": [108267], "msg": "<value>", "type": "<value>"}]}
  add_data_element:
    speakeasy-default-add-data-element:
      parameters:
        path:
          datasource_id: "<id>"
        header:
          customer-id: "<id>"
      requestBody:
        application/json: {"description": "mmm slip punctual whether fooey", "name": "<value>", "path": "/dev", "media_type": "<value>", "discovery_record": {"discovery_time": "<value>", "last_modified_time": "<value>", "size": 643019, "element_hash": "<value>"}}
      responses:
        "200":
          application/json: {"id": "<id>"}
        "422":
          application/json: {"detail": [{"loc": ["<value>"], "msg": "<value>", "type": "<value>"}]}
  get_data_element:
    speakeasy-default-get-data-element:
      parameters:
        path:
          datasource_id: "<id>"
          data_element_id: "<id>"
        header:
          customer-id: "<id>"
      responses:
        "200":
          application/json: {"id": "<id>", "datasource_id": "<id>", "name": "<value>", "path": "/usr/include", "media_type": "<value>", "discovery_record": null, "description": "lifestyle split blight matter", "created_at": "1732325300596", "updated_at": "1735648354638"}
        "422":
          application/json: {"detail": [{"loc": [], "msg": "<value>", "type": "<value>"}]}
  update_data_element:
    speakeasy-default-update-data-element:
      parameters:
        path:
          datasource_id: "<id>"
          data_element_id: "<id>"
        header:
          customer-id: "<id>"
      requestBody:
        application/json: {"description": "now expert including pish obedient yieldingly", "name": "<value>", "path": "/media", "media_type": "<value>", "discovery_record": {"discovery_time": "<value>", "last_modified_time": "<value>", "size": 982718, "element_hash": "<value>"}}
      responses:
        "200":
          application/json: {"id": "<id>"}
        "422":
          application/json: {"detail": [{"loc": [199855], "msg": "<value>", "type": "<value>"}]}
  delete_data_element:
    speakeasy-default-delete-data-element:
      parameters:
        path:
          datasource_id: "<id>"
          data_element_id: "<id>"
        header:
          customer-id: "<id>"
      responses:
        "200":
          application/json: {"id": "<id>"}
        "422":
          application/json: {"detail": [{"loc": [], "msg": "<value>", "type": "<value>"}]}
  get_all_data_elements:
    speakeasy-default-get-all-data-elements:
      parameters:
        path:
          datasource_id: "<id>"
        query:
          offset: 0
          limit: 10
        header:
          customer-id: "<id>"
      responses:
        "200":
          application/json: [{"id": "<id>", "datasource_id": "<id>", "name": "<value>", "path": "/proc", "media_type": "<value>", "discovery_record": {"discovery_time": "<value>", "last_modified_time": "<value>", "size": 293551, "element_hash": "<value>"}, "description": "vice straight where who correctly ick or unethically upbeat", "created_at": "1735100916112", "updated_at": "1735643187614"}]
        "422":
          application/json: {}
  get_data_element_by_path:
    speakeasy-default-get-data-element-by-path:
      parameters:
        path:
          datasource_id: "<id>"
        header:
          customer-id: "<id>"
      requestBody:
        application/json: {"path": "/var/tmp"}
      responses:
        "200":
          application/json: {"id": "<id>", "datasource_id": "<id>", "name": "<value>", "path": "/bin", "media_type": "<value>", "discovery_record": {"discovery_time": "<value>", "last_modified_time": "<value>", "size": 634.94, "element_hash": "<value>"}, "description": "funny phew advocate commemorate um functional shanghai lumbering consequently naturally", "created_at": "1732208379761", "updated_at": "1735686346742"}
        "422":
          application/json: {}
  get_new_and_updated_elements:
    speakeasy-default-get-new-and-updated-elements:
      parameters:
        path:
          datasource_id: "<id>"
        query:
          ingest_method: "RAG"
          offset: 0
          limit: 10
        header:
          customer-id: "<id>"
      responses:
        "200":
          application/json: {"new_data_elements": [], "updated_data_elements": []}
        "422":
          application/json: {}
  add_tag_config:
    speakeasy-default-add-tag-config:
      parameters:
        path:
          datasource_id: "<id>"
        header:
          customer-id: "<id>"
      requestBody:
        application/json: {"description": "bandwidth anenst psst round secrecy judicious gown atrium ick", "logical_group_regex": "<value>", "working_bucket": "<value>", "db_path": null}
      responses:
        "200":
          application/json: {"message": "<value>"}
        "422":
          application/json: {"detail": [{"loc": [], "msg": "<value>", "type": "<value>"}]}
  get_tag_config:
    speakeasy-default-get-tag-config:
      parameters:
        path:
          datasource_id: "<id>"
        header:
          customer-id: "<id>"
      responses:
        "200":
          application/json: {"datasource_id": "<id>", "description": "spotless jealous always bandwidth aside outside loaf", "logical_group_regex": "<value>", "working_bucket": "<value>", "db_path": "<value>", "created_by": "<value>", "updated_by": "<value>"}
        "422":
          application/json: {"detail": [{"loc": [827993], "msg": "<value>", "type": "<value>"}]}
  update_tag_config:
    speakeasy-default-update-tag-config:
      parameters:
        path:
          datasource_id: "<id>"
        header:
          customer-id: "<id>"
      requestBody:
        application/json: {"description": "fatherly grown shrilly jealously decide", "logical_group_regex": null, "working_bucket": "<value>", "db_path": "<value>"}
      responses:
        "200":
          application/json: {"message": "<value>"}
        "422":
          application/json: {"detail": [{"loc": [], "msg": "<value>", "type": "<value>"}]}
  delete_tag_config:
    speakeasy-default-delete-tag-config:
      parameters:
        path:
          datasource_id: "<id>"
        header:
          customer-id: "<id>"
      responses:
        "200":
          application/json: "<value>"
        "422":
          application/json: {"detail": [{"loc": ["<value>"], "msg": "<value>", "type": "<value>"}]}
  add_tag_table_info:
    speakeasy-default-add-tag-table-info:
      parameters:
        path:
          datasource_id: "<id>"
          table_name: "<value>"
        header:
          customer-id: "<id>"
      requestBody:
        application/json: {"description": "below eulogise questioningly nephew innovation strange likewise brr"}
      responses:
        "200":
          application/json: {"message": "<value>"}
        "422":
          application/json: {"detail": [{"loc": ["<value>"], "msg": "<value>", "type": "<value>"}]}
  get_tag_table_info:
    speakeasy-default-get-tag-table-info:
      parameters:
        path:
          datasource_id: "<id>"
          table_name: "<value>"
        header:
          customer-id: "<id>"
      responses:
        "200":
          application/json: {"datasource_id": "<id>", "name": "<value>", "description": "spanish yowza oh"}
        "422":
          application/json: {"detail": [{"loc": [], "msg": "<value>", "type": "<value>"}]}
  update_tag_table_info:
    speakeasy-default-update-tag-table-info:
      parameters:
        path:
          datasource_id: "<id>"
          table_name: "<value>"
        header:
          customer-id: "<id>"
      requestBody:
        application/json: {"description": "affectionate colorfully for whose unnaturally smog huzzah perfectly"}
      responses:
        "200":
          application/json: {"message": "<value>"}
        "422":
          application/json: {"detail": [{"loc": [], "msg": "<value>", "type": "<value>"}]}
  delete_tag_table_info:
    speakeasy-default-delete-tag-table-info:
      parameters:
        path:
          datasource_id: "<id>"
          table_name: "<value>"
        header:
          customer-id: "<id>"
      responses:
        "200":
          application/json: {"message": "<value>"}
        "422":
          application/json: {"detail": [{"loc": [], "msg": "<value>", "type": "<value>"}]}
  get_all_tag_table_info:
    speakeasy-default-get-all-tag-table-info:
      parameters:
        path:
          datasource_id: "<id>"
        query:
          offset: 0
          limit: 10
          sort_by: "<value>"
          sort_order: "<value>"
        header:
          customer-id: "<id>"
      responses:
        "200":
          application/json: [{"datasource_id": "<id>", "name": "<value>", "description": "lightly book disappointment meanwhile zowie unnaturally um lest up"}]
        "422":
          application/json: {"detail": [{"loc": [], "msg": "<value>", "type": "<value>"}]}
  add_tag_column_info:
    speakeasy-default-add-tag-column-info:
      parameters:
        path:
          datasource_id: "<id>"
          table_name: "<value>"
          column_name: "<value>"
        header:
          customer-id: "<id>"
      requestBody:
        application/json: {"description": "really agitated gladly printer", "dtype": "<value>", "is_key": false, "is_indexed": false, "engineered_features": ["<value 1>"]}
      responses:
        "200":
          application/json: {"message": "<value>"}
        "422":
          application/json: {"detail": [{"loc": [], "msg": "<value>", "type": "<value>"}]}
  get_tag_column_info:
    speakeasy-default-get-tag-column-info:
      parameters:
        path:
          datasource_id: "<id>"
          table_name: "<value>"
          column_name: "<value>"
        header:
          customer-id: "<id>"
      responses:
        "200":
          application/json: {"datasource_id": "<id>", "table_name": "<value>", "name": "<value>", "description": "brr downchange injunction anti unnaturally ferociously obscure", "dtype": "<value>", "is_key": false, "is_indexed": false, "engineered_features": ["<value 1>", "<value 2>", "<value 3>"]}
        "422":
          application/json: {"detail": [{"loc": [], "msg": "<value>", "type": "<value>"}]}
  update_tag_column_info:
    speakeasy-default-update-tag-column-info:
      parameters:
        path:
          datasource_id: "<id>"
          table_name: "<value>"
          column_name: "<value>"
        header:
          customer-id: "<id>"
      requestBody:
        application/json: {"description": "pish poorly boo evenly appliance but aw", "dtype": "<value>", "is_key": true, "is_indexed": true, "engineered_features": ["<value 1>", "<value 2>", "<value 3>"]}
      responses:
        "200":
          application/json: {"message": "<value>"}
        "422":
          application/json: {"detail": [{"loc": [], "msg": "<value>", "type": "<value>"}]}
  get_all_tag_column_info:
    speakeasy-default-get-all-tag-column-info:
      parameters:
        path:
          datasource_id: "<id>"
          table_name: "<value>"
        query:
          offset: 0
          limit: 10
          sort_by: null
          sort_order: "<value>"
        header:
          customer-id: "<id>"
      responses:
        "200":
          application/json: [{"datasource_id": "<id>", "table_name": "<value>", "name": "<value>", "description": null, "dtype": "<value>", "is_key": true, "is_indexed": false, "engineered_features": ["<value 1>"]}]
        "422":
          application/json: {"detail": [{"loc": [], "msg": "<value>", "type": "<value>"}]}
  delete_tag_column_info:
    speakeasy-default-delete-tag-column-info:
      parameters:
        path:
          datasource_id: "<id>"
          table_name: "<value>"
          column_name: "<value>"
        header:
          customer-id: "<id>"
      responses:
        "200":
          application/json: {"message": "<value>"}
        "422":
          application/json: {"detail": [{"loc": [89433], "msg": "<value>", "type": "<value>"}]}
  add_rag_config:
    speakeasy-default-add-rag-config:
      parameters:
        path:
          datasource_id: "<id>"
        header:
          customer-id: "<id>"
      requestBody:
        application/json: {"description": "unto yippee unknown from", "collection_id": "<id>", "extractor_model": {"name": "<value>", "endpoint": "<value>"}, "embedding_model": {"name": "<value>", "endpoint": "<value>", "dimensions": 107326}, "sparse_embedding_model": {"name": "<value>", "endpoint": "<value>"}, "collect_metadata": true, "metadata_options": {"create_title": true, "extract_questions_answers": false, "extract_summary": false, "has_consumer_content": null, "get_bibliographical_information": null}}
      responses:
        "200":
          application/json: {"message": "<value>"}
        "422":
          application/json: {"detail": [{"loc": ["<value>"], "msg": "<value>", "type": "<value>"}]}
  get_rag_config:
    speakeasy-default-get-rag-config:
      parameters:
        path:
          datasource_id: "<id>"
        header:
          customer-id: "<id>"
      responses:
        "200":
          application/json: {"datasource_id": "<id>", "description": "ick yum whoa ugly unlike bah unto briefly frail", "collection_id": "<id>", "extractor_model": {"name": "<value>", "endpoint": "<value>"}, "embedding_model": {"name": "<value>", "endpoint": "<value>", "dimensions": 339770}, "sparse_embedding_model": {"name": "<value>", "endpoint": "<value>"}, "collect_metadata": false, "metadata_options": {"create_title": false, "extract_questions_answers": true, "extract_summary": null, "has_consumer_content": false, "get_bibliographical_information": false}, "created_by": "<value>", "updated_by": null}
        "422":
          application/json: {"detail": [{"loc": [], "msg": "<value>", "type": "<value>"}]}
  update_rag_config:
    speakeasy-default-update-rag-config:
      parameters:
        path:
          datasource_id: "<id>"
        header:
          customer-id: "<id>"
      requestBody:
        application/json: {"description": "stable suckle volleyball yieldingly cleverly shyly", "collection_id": "<id>", "extractor_model": {"name": "<value>", "endpoint": "<value>"}, "embedding_model": {"name": "<value>", "endpoint": "<value>", "dimensions": 477647}, "sparse_embedding_model": {"name": "<value>", "endpoint": "<value>"}, "collect_metadata": false, "metadata_options": {"create_title": true, "extract_questions_answers": true, "extract_summary": false, "has_consumer_content": true, "get_bibliographical_information": true}}
      responses:
        "200":
          application/json: {"message": "<value>"}
        "422":
          application/json: {"detail": [{"loc": [536699], "msg": "<value>", "type": "<value>"}]}
  delete_rag_config:
    speakeasy-default-delete-rag-config:
      parameters:
        path:
          datasource_id: "<id>"
        header:
          customer-id: "<id>"
      responses:
        "200":
          application/json: "<value>"
        "422":
          application/json: {"detail": [{"loc": [], "msg": "<value>", "type": "<value>"}]}
  add_chunking_strategy:
    speakeasy-default-add-chunking-strategy:
      parameters:
        path:
          datasource_id: "<id>"
        header:
          customer-id: "<id>"
      requestBody:
        application/json: {"code_splitter": {"chunk_lines": 750571, "chunk_lines_overlap": 608702, "max_chars": 567662}, "html_node_parser": {"include_metadata": true, "include_prev_next_rel": false, "tags": ["<value 1>", "<value 2>"]}, "json_node_parser": {"include_metadata": true, "include_prev_next_rel": true}, "markdown_node_parser": {"include_metadata": false, "include_prev_next_rel": true, "header_path_separator": "<value>"}, "semantic_splitter_node_parser": {"buffer_size": 887654, "include_metadata": true, "include_prev_next_rel": false, "breakpoint_percentile_threshold": 22055}, "sentence_splitter": {"chunk_size": 351648, "chunk_overlap": 940255, "separator": "<value>", "paragraph_separator": "<value>", "secondary_chunking_regex": "<value>"}, "token_text_splitter": {"chunk_size": 846457, "chunk_overlap": 52711, "separator": "<value>", "backup_separators": ["<value 1>"], "keep_whitespaces": false}}
      responses:
        "200":
          application/json: {"message": "<value>"}
        "422":
          application/json: {"detail": [{"loc": [], "msg": "<value>", "type": "<value>"}]}
  get_chunking_strategy:
    speakeasy-default-get-chunking-strategy:
      parameters:
        path:
          datasource_id: "<id>"
        header:
          customer-id: "<id>"
      responses:
        "200":
          application/json: {"datasource_id": "<id>", "code_splitter": {"chunk_lines": 117014, "chunk_lines_overlap": 503866, "max_chars": null}, "html_node_parser": {"include_metadata": false, "include_prev_next_rel": false, "tags": ["<value 1>", "<value 2>"]}, "json_node_parser": {"include_metadata": false, "include_prev_next_rel": false}, "markdown_node_parser": {"include_metadata": false, "include_prev_next_rel": true, "header_path_separator": "<value>"}, "semantic_splitter_node_parser": {"buffer_size": 91832, "include_metadata": false, "include_prev_next_rel": true, "breakpoint_percentile_threshold": 480247}, "sentence_splitter": {"chunk_size": 76215, "chunk_overlap": 877486, "separator": "<value>", "paragraph_separator": "<value>", "secondary_chunking_regex": "<value>"}, "token_text_splitter": {"chunk_size": 79821, "chunk_overlap": 620057, "separator": "<value>", "backup_separators": ["<value 1>"], "keep_whitespaces": true}}
        "422":
          application/json: {"detail": [{"loc": ["<value>"], "msg": "<value>", "type": "<value>"}]}
  update_chunking_strategy:
    speakeasy-default-update-chunking-strategy:
      parameters:
        path:
          datasource_id: "<id>"
        header:
          customer-id: "<id>"
      requestBody:
        application/json: {"code_splitter": {"chunk_lines": 246082, "chunk_lines_overlap": 454883, "max_chars": 942191}, "html_node_parser": {"include_metadata": true, "include_prev_next_rel": true, "tags": ["<value 1>", "<value 2>", "<value 3>"]}, "json_node_parser": {"include_metadata": false, "include_prev_next_rel": false}, "markdown_node_parser": {"include_metadata": true, "include_prev_next_rel": true, "header_path_separator": "<value>"}, "semantic_splitter_node_parser": {"buffer_size": 745292, "include_metadata": false, "include_prev_next_rel": false, "breakpoint_percentile_threshold": 912198}, "sentence_splitter": {"chunk_size": 477170, "chunk_overlap": 716276, "separator": "<value>", "paragraph_separator": "<value>", "secondary_chunking_regex": "<value>"}, "token_text_splitter": {"chunk_size": 635106, "chunk_overlap": 380612, "separator": "<value>", "backup_separators": ["<value 1>", "<value 2>"], "keep_whitespaces": true}}
      responses:
        "200":
          application/json: {"message": "<value>"}
        "422":
          application/json: {"detail": [{"loc": [], "msg": "<value>", "type": "<value>"}]}
  delete_chunking_strategy:
    speakeasy-default-delete-chunking-strategy:
      parameters:
        path:
          datasource_id: "<id>"
        header:
          customer-id: "<id>"
      responses:
        "200":
          application/json: {"message": "<value>"}
        "422":
          application/json: {"detail": [{"loc": [], "msg": "<value>", "type": "<value>"}]}
  upsert_ingest_record:
    speakeasy-default-upsert-ingest-record:
      parameters:
        path:
          datasource_id: "<id>"
          data_element_id: "<id>"
          ingest_method: "RAG"
        header:
          customer-id: "<id>"
      requestBody:
        application/json: {"ingest_time": "<value>", "element_hash": "<value>"}
      responses:
        "200":
          application/json: {"message": "<value>"}
        "422":
          application/json: {}
  get_ingest_record:
    speakeasy-default-get-ingest-record:
      parameters:
        path:
          datasource_id: "<id>"
          data_element_id: "<id>"
          ingest_method: "RAG"
        header:
          customer-id: "<id>"
      responses:
        "200":
          application/json: {"datasource_id": "<id>", "data_element_id": "<id>", "ingest_method": "RAG", "ingest_time": "<value>", "element_hash": "<value>"}
        "422":
          application/json: {}
  delete_ingest_record:
    speakeasy-default-delete-ingest-record:
      parameters:
        path:
          datasource_id: "<id>"
          data_element_id: "<id>"
          ingest_method: "RefGraph"
        header:
          customer-id: "<id>"
      responses:
        "200":
          application/json: {"message": "<value>"}
        "422":
          application/json: {}
  get_all_ingest_records:
    speakeasy-default-get-all-ingest-records:
      parameters:
        path:
          datasource_id: "<id>"
        query:
          offset: 0
          limit: 10
        header:
          customer-id: "<id>"
      responses:
        "200":
          application/json: [{"datasource_id": "<id>", "data_element_id": "<id>", "ingest_method": "RAG", "ingest_time": "<value>", "element_hash": "<value>"}]
        "422":
          application/json: {}
  add_reference_graph_config:
    speakeasy-default-add-reference-graph-config:
      parameters:
        path:
          datasource_id: "<id>"
        header:
          customer-id: "<id>"
      requestBody:
        application/json: {"endpoint": "<value>", "db_name": "<value>", "doc_collection": "<value>", "ref_collection": "<value>"}
      responses:
        "200":
          application/json: {"message": "<value>"}
        "422":
          application/json: {}
  get_reference_graph_config:
    speakeasy-default-get-reference-graph-config:
      parameters:
        path:
          datasource_id: "<id>"
        header:
          customer-id: "<id>"
      responses:
        "200":
          application/json: {"datasource_id": "<id>", "endpoint": "<value>", "db_name": "<value>", "doc_collection": "<value>", "ref_collection": "<value>"}
        "422":
          application/json: {}
  update_reference_graph_config:
    speakeasy-default-update-reference-graph-config:
      parameters:
        path:
          datasource_id: "<id>"
        header:
          customer-id: "<id>"
      requestBody:
        application/json: {}
      responses:
        "200":
          application/json: {"message": "<value>"}
        "422":
          application/json: {}
  delete_reference_graph_config:
    speakeasy-default-delete-reference-graph-config:
      parameters:
        path:
          datasource_id: "<id>"
        header:
          customer-id: "<id>"
      responses:
        "200":
          application/json: {"message": "<value>"}
        "422":
          application/json: {}
  add_blueprint_instance:
    speakeasy-default-add-blueprint-instance:
      parameters:
        header:
          customer-id: "<id>"
      requestBody:
        application/json: {"blueprint_id": "<id>", "workflow_type": "<value>", "task_queue": "<value>", "instance_metadata": {"key": "<value>", "key1": "<value>"}, "parent_id": "<id>"}
      responses:
        "201":
          application/json: {"id": "<id>"}
        "422":
          application/json: {"detail": [{"loc": [650263], "msg": "<value>", "type": "<value>"}]}
  get_all_blueprint_instances:
    speakeasy-default-get-all-blueprint-instances:
      parameters:
        query:
          include_children: false
          include_activities: false
          include_events: false
          offset: 0
          limit: 10
          sort_by: "<value>"
          sort_order: "<value>"
        header:
          customer-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "422":
          application/json: {"detail": [{"loc": ["<value>"], "msg": "<value>", "type": "<value>"}]}
  get_blueprint_instance:
    speakeasy-default-get-blueprint-instance:
      parameters:
        path:
          blueprint_instance_id: "<id>"
        query:
          include_children: false
          include_activities: false
          include_events: false
        header:
          customer-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "<id>", "blueprint_id": "<id>", "workflow_type": "<value>", "task_queue": "<value>", "workflow_run_id": "<id>", "status": "created", "start_time": "2023-05-21T08:20:56.764Z", "end_time": "2023-08-09T01:59:55.956Z", "instance_metadata": {"key": "<value>", "key1": "<value>"}, "parent_id": "<id>", "children": [{"id": "<id>", "blueprint_id": null, "workflow_type": "<value>", "task_queue": "<value>", "workflow_run_id": "<id>", "status": "failed", "start_time": "2025-03-10T03:12:34.873Z", "end_time": "2025-10-08T07:20:42.727Z", "instance_metadata": {"key": "<value>", "key1": "<value>"}, "parent_id": "<id>", "activities": [{"id": "<id>", "blueprint_instance_id": "<id>", "activity_type": "<value>", "status": "failed", "start_time": "2025-04-03T02:59:40.522Z", "end_time": "2023-12-04T21:24:21.856Z", "input_data": {"key": "<value>", "key1": "<value>"}, "output_data": {"key": "<value>", "key1": "<value>"}, "error": "<value>", "group_id": "<id>"}], "events": [{"id": "<id>", "activity_id": "<id>", "blueprint_instance_id": "<id>", "event_type": "custom_event", "timestamp": "2023-01-08T21:52:29.903Z", "details": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "group_id": "<id>", "is_signal": false, "is_internal": true, "originating_signal_id": null}]}], "activities": [{"id": "<id>", "blueprint_instance_id": "<id>", "activity_type": "<value>", "status": "failed", "start_time": "2025-04-03T02:59:40.522Z", "end_time": "2023-12-04T21:24:21.856Z", "input_data": {"key": "<value>", "key1": "<value>"}, "output_data": {"key": "<value>", "key1": "<value>"}, "error": "<value>", "group_id": "<id>"}], "events": [{"id": "<id>", "activity_id": "<id>", "blueprint_instance_id": "<id>", "event_type": "custom_event", "timestamp": "2023-01-08T21:52:29.903Z", "details": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "group_id": "<id>", "is_signal": false, "is_internal": true, "originating_signal_id": null}]}]}
        "422":
          application/json: {"detail": [{"loc": [], "msg": "<value>", "type": "<value>"}]}
  delete_blueprint_instance:
    speakeasy-default-delete-blueprint-instance:
      parameters:
        path:
          blueprint_instance_id: "<id>"
        header:
          customer-id: "<id>"
      responses:
        "422":
          application/json: {"detail": [{"loc": [41876], "msg": "<value>", "type": "<value>"}]}
  update_blueprint_instance_status:
    speakeasy-default-update-blueprint-instance-status:
      parameters:
        path:
          blueprint_instance_id: "<id>"
        query:
          updated_status_value: "cancelled"
          workflow_run_id: "<id>"
        header:
          customer-id: "<id>"
      responses:
        "422":
          application/json: {"detail": [{"loc": [560857], "msg": "<value>", "type": "<value>"}]}
  complete_blueprint_instance:
    speakeasy-default-complete-blueprint-instance:
      parameters:
        path:
          blueprint_instance_id: "<id>"
        header:
          customer-id: "<id>"
      requestBody:
        application/json: {"result": null}
      responses:
        "202":
          application/json: "<value>"
        "422":
          application/json: {"detail": [{"loc": [], "msg": "<value>", "type": "<value>"}]}
  fail_blueprint_instance:
    speakeasy-default-fail-blueprint-instance:
      parameters:
        path:
          blueprint_instance_id: "<id>"
        header:
          customer-id: "<id>"
      requestBody:
        application/json: {"error": "<value>", "error_details": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}
      responses:
        "202":
          application/json: "<value>"
        "422":
          application/json: {"detail": [{"loc": [], "msg": "<value>", "type": "<value>"}]}
  add_activity_by_blueprint_instance:
    speakeasy-default-add-activity-by-blueprint-instance:
      parameters:
        path:
          blueprint_instance_id: "<id>"
        header:
          customer-id: "<id>"
      requestBody:
        application/json: {"activity_type": "<value>", "input_data": {"key": "<value>"}, "output_data": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "group_id": "<id>"}
      responses:
        "201":
          application/json: {"id": "<id>"}
        "422":
          application/json: {"detail": [{"loc": [], "msg": "<value>", "type": "<value>"}]}
  get_activity_by_blueprint_instance:
    speakeasy-default-get-activity-by-blueprint-instance:
      parameters:
        path:
          blueprint_instance_id: "<id>"
          activity_id: "<id>"
        header:
          customer-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "<id>", "blueprint_instance_id": "<id>", "activity_type": "<value>", "status": "failed", "start_time": "2025-08-20T19:41:15.604Z", "end_time": "2025-01-26T13:16:49.827Z", "input_data": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "output_data": {"key": "<value>", "key1": "<value>"}, "error": "<value>", "group_id": "<id>"}]}
        "422":
          application/json: {"detail": [{"loc": ["<value>"], "msg": "<value>", "type": "<value>"}]}
  get_activities_by_blueprint_instance:
    speakeasy-default-get-activities-by-blueprint-instance:
      parameters:
        path:
          blueprint_instance_id: "<id>"
        query:
          offset: 0
          limit: 10
          sort_by: "<value>"
          sort_order: "<value>"
        header:
          customer-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "422":
          application/json: {"detail": [{"loc": [], "msg": "<value>", "type": "<value>"}]}
  update_activity_status:
    speakeasy-default-update-activity-status:
      parameters:
        path:
          blueprint_instance_id: "<id>"
          activity_id: "<id>"
        query:
          updated_status_value: "running"
        header:
          customer-id: "<id>"
      responses:
        "422":
          application/json: {"detail": [{"loc": [], "msg": "<value>", "type": "<value>"}]}
  get_event_by_blueprint_instance:
    speakeasy-default-get-event-by-blueprint-instance:
      parameters:
        path:
          blueprint_instance_id: "<id>"
          event_id: "<id>"
        header:
          customer-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "<id>", "activity_id": "<id>", "blueprint_instance_id": "<id>", "event_type": "agent_thinking", "timestamp": "2023-10-22T21:46:41.270Z", "details": {"key": "<value>", "key1": "<value>"}, "group_id": "<id>", "is_signal": null, "is_internal": null, "originating_signal_id": "<id>"}]}
        "422":
          application/json: {"detail": [{"loc": [515032], "msg": "<value>", "type": "<value>"}]}
  create_event_by_blueprint_instance_id:
    speakeasy-default-create-event-by-blueprint-instance-id:
      parameters:
        path:
          blueprint_instance_id: "<id>"
        header:
          customer-id: "<id>"
      requestBody:
        application/json: {"activity_id": null, "event_name": "<value>", "details": {"key": "<value>"}, "group_id": "<id>", "is_signal": false, "is_internal": false, "originating_signal_id": "<id>"}
      responses:
        "201":
          application/json: {"id": "<id>"}
        "422":
          application/json: {"detail": [{"loc": [262272], "msg": "<value>", "type": "<value>"}]}
  get_events_by_blueprint_instance:
    speakeasy-default-get-events-by-blueprint-instance:
      parameters:
        path:
          blueprint_instance_id: "<id>"
        query:
          offset: 0
          limit: 10
          sort_by: "<value>"
          sort_order: "<value>"
        header:
          customer-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "422":
          application/json: {"detail": [{"loc": [], "msg": "<value>", "type": "<value>"}]}
  start_blueprint_instance:
    speakeasy-default-start-blueprint-instance:
      parameters:
        path:
          blueprint_instance_id: "<id>"
      requestBody:
        application/json: {"workflow_args": ["<value 1>"], "workflow_kwargs": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}
      responses:
        "201":
          application/json: "<value>"
        "422":
          application/json: {"detail": [{"loc": [], "msg": "<value>", "type": "<value>"}]}
  cancel_blueprint_instance:
    speakeasy-default-cancel-blueprint-instance:
      parameters:
        path:
          blueprint_instance_id: "<id>"
      responses:
        "200":
          application/json: "<value>"
        "422":
          application/json: {"detail": [{"loc": [], "msg": "<value>", "type": "<value>"}]}
  send_signal:
    speakeasy-default-send-signal:
      parameters:
        path:
          blueprint_instance_id: "<id>"
          signal_name: "<value>"
      requestBody:
        application/json: ["<value 1>"]
      responses:
        "201":
          application/json: "<value>"
        "422":
          application/json: {"detail": [{"loc": [19621], "msg": "<value>", "type": "<value>"}]}
  query_workflow:
    speakeasy-default-query-workflow:
      parameters:
        path:
          blueprint_instance_id: "<id>"
          query_name: "<value>"
      requestBody:
        application/json: ["<value 1>", "<value 2>"]
      responses:
        "200":
          application/json: "<value>"
        "422":
          application/json: {"detail": [{"loc": [], "msg": "<value>", "type": "<value>"}]}
  get_datasource_ids:
    speakeasy-default-get-datasource-ids:
      parameters:
        query:
          offset: 0
          limit: 10
          sort_by: "<value>"
          sort_order: "<value>"
      responses:
        "200":
          application/json: ["<value 1>", "<value 2>"]
        "422":
          application/json: {"detail": [{"loc": [], "msg": "<value>", "type": "<value>"}]}
  get_data_elements:
    speakeasy-default-get-data-elements:
      parameters:
        path:
          datasource_id: "<id>"
        query:
          offset: 0
          limit: 10
          sort_by: "<value>"
          sort_order: "<value>"
      responses:
        "200":
          application/json: [{"id": "<id>", "datasource_id": "<id>", "name": "<value>", "path": "/sbin", "media_type": "<value>", "discovery_record": null, "description": "jubilantly firsthand whoever scenario ugh lest electrify without", "created_at": "1707234184486", "updated_at": "1735623202715"}]
        "422":
          application/json: {"detail": [{"loc": [], "msg": "<value>", "type": "<value>"}]}
  get_data_elements_by_filters:
    speakeasy-default-get-data-elements-by-filters:
      parameters:
        path:
          datasource_id: "<id>"
        query:
          offset: 0
          limit: 10
          regex_filter: "<value>"
          media_type_filters: ["<value 1>", "<value 2>"]
          sort_by: "<value>"
          sort_order: "<value>"
      requestBody:
        application/json: {"filters": [{"key": "name", "condition": null, "value": "<value>"}]}
      responses:
        "200":
          application/json: [{"id": "<id>", "datasource_id": "<id>", "name": "<value>", "path": "/lost+found", "media_type": "<value>", "discovery_record": null, "description": "propound nor innocently along furthermore truly essential", "created_at": "1734506020724", "updated_at": "1735613666656"}]
        "422":
          application/json: {"detail": [{"loc": [], "msg": "<value>", "type": "<value>"}]}
  delete_datasource:
    speakeasy-default-delete-datasource:
      parameters:
        path:
          datasource_id: "<id>"
      responses:
        "200":
          application/json: {"id": "<id>"}
        "422":
          application/json: {"detail": [{"loc": [], "msg": "<value>", "type": "<value>"}]}
examplesVersion: 1.0.2
generatedTests: {}
releaseNotes: |
  ## SDK Changes Detected:
  * `meibelai.datasources.delete_datasource()`: **Added**
  * `meibelai.blueprint_instances.start_blueprint_instance()`: **Added**
  * `meibelai.blueprint_instances.cancel_blueprint_instance()`: **Added**
  * `meibelai.blueprint_instances.send_signal()`: **Added**
  * `meibelai.blueprint_instances.query_workflow()`: **Added**
  * `meibelai.datasources.delete_datasource_datasource_datasource_id_delete()`: **Deleted** **Breaking** :warning:
  * `meibelai.workflows.start_blueprint_instance()`: **Deleted** **Breaking** :warning:
  * `meibelai.workflows.cancel_blueprint_instance()`: **Deleted** **Breaking** :warning:
  * `meibelai.workflows.send_signal()`: **Deleted** **Breaking** :warning:
  * `meibelai.workflows.query_workflow()`: **Deleted** **Breaking** :warning:
